const getters = {
    baseInfo: state => state.report.baseInfo,
    object:state => state.report.objectSetting,
    rule:state => state.report.ruleSetting,
    activityCategory: state => state.report.baseInfo.activity.activityCategory,
    activityName: state => state.report.baseInfo.activity.activityName,
    activityPlatform: state => state.report.baseInfo.activity.activityPlatform,
    platformCategory: state => state.report.baseInfo.activity.platformCategory,
    activityLevel: state => state.report.baseInfo.activity.activityLevel,
    courseDescription: state => state.report.baseInfo.activity.courseDescription,
    address: state => state.report.baseInfo.activity.address,
    remind: state => state.report.baseInfo.activity.remind,
    slogan: state => state.report.baseInfo.activity.slogan,
    activityPlatformText: state => state.report.activityPlatformText,
    platformCategoryText: state => state.report.platformCategoryText,
    activityLevelText: state => state.report.activityLevelText,
    sponsor: state => state.report.baseInfo.sponsor,
    contractor: state => state.report.baseInfo.contractor,
    assist: state => state.report.baseInfo.assist,
    charge: state => state.report.baseInfo.charge,
    controllerType: state => state.report.ruleSetting.controllerType,
    controller: state => state.report.ruleSetting.controller,
    organizerType: state => state.report.ruleSetting.organizerType,
    organizer: state => state.report.ruleSetting.organizer,
    participantType: state => state.report.ruleSetting.participantType,
    participant: state => state.report.ruleSetting.participant,
    tempControllerStudents: state => state.report.tempControllerStudents,
    tempOrganizerStudents: state => state.report.tempOrganizerStudents,
    tempParticipantStudents: state => state.report.tempParticipantStudents,
    tempSponsor: state => state.report.tempSponsor,
    tempAssist: state => state.report.tempAssist,
    tempContractor: state => state.report.tempContractor,
    activityBeginTime: state => state.report.ruleSetting.rule.activityBeginTime,
    activityEndTime: state => state.report.ruleSetting.rule.activityEndTime,
    applicationBeginTime: state => state.report.ruleSetting.rule.applicationBeginTime,
    applicationEndTime: state => state.report.ruleSetting.rule.applicationEndTime,
    coverPicture: state => state.report.baseInfo.activity.coverPicture,
    signContent: state => state.report.ruleSetting.signContent,
    signBack: state => state.report.ruleSetting.rule.signBack,
    signBackStartTime: state => state.report.ruleSetting.rule.signBackStartTime,
    signBackEndTime: state => state.report.ruleSetting.rule.signBackEndTime,
    longitude: state => state.report.ruleSetting.rule.longitude,
    latitude: state => state.report.ruleSetting.rule.latitude,
    signBackType: state => state.report.ruleSetting.rule.signType,
    distance: state => state.report.ruleSetting.rule.distance,
    signPosition: state => state.report.ruleSetting.rule.signPosition,
    duration: state => state.report.ruleSetting.rule.duration,
    signCaption: state => state.report.ruleSetting.rule.signCaption,
    tempSignPosition: state => state.report.tempSignPosition,
    tempSignStartTime: state => state.report.tempSignStartTime,
    tempSignEndTime: state => state.report.tempSignEndTime,
    tempSignBack: state => state.report.tempSignBack,
    tempSignType: state => state.report.tempSignType,
    tempDuration: state => state.report.tempDuration,
    roleCancel: state => state.report.ruleSetting.rule.roleCancel,
    roleCancelBeginTime: state => state.report.ruleSetting.rule.roleCancelBeginTime,
    roleCancelEndTime: state => state.report.ruleSetting.rule.roleCancelEndTime,
    activityComment: state => state.report.ruleSetting.rule.activityComment,
    commentEndTime: state => state.report.ruleSetting.rule.commentEndTime,
    activityRetroactive: state => state.report.ruleSetting.rule.activityRetroactive,
    activityRetroBeginTime: state => state.report.ruleSetting.rule.activityRetroBeginTime,
    activityRetroEndTime: state => state.report.ruleSetting.rule.activityRetroEndTime,
    college: state => state.report.objectSetting.college,
    major: state => state.report.objectSetting.major,
    grade: state => state.report.objectSetting.grade,
    clbum: state => state.report.objectSetting.clbum,
    otherCollege: state => state.report.objectSetting.object.otherCollege,
    otherMajor: state => state.report.objectSetting.object.otherMajor,
    otherGrade: state => state.report.objectSetting.object.otherGrade,
    otherClass: state => state.report.objectSetting.object.otherClass,
    limitCollege: state => state.report.objectSetting.object.limitCollege,
    limitMajor: state => state.report.objectSetting.object.limitMajor,
    limitGrade: state => state.report.objectSetting.object.limitGrade,
    limitClass: state => state.report.objectSetting.object.limitClass,
    tempCollege: state => state.report.tempCollege,
    tempMajor: state => state.report.tempMajor,
    tempGrade: state => state.report.tempGrade,
    tempClbum: state => state.report.tempClbum,
    tempOtherCollege: state => state.report.tempOtherCollege,
    tempOtherMajor: state => state.report.tempOtherMajor,
    tempOtherGrade: state => state.report.tempOtherGrade,
    tempOtherClbum: state => state.report.tempOtherClbum,
    tempLimitCollege: state => state.report.tempLimitCollege,
    tempLimitMajor: state => state.report.tempLimitMajor,
    tempLimitGrade: state => state.report.tempLimitGrade,
    tempLimitClass: state => state.report.tempLimitClass,
    tempControllerSelect: state => state.report.tempControllerSelect,
    tempOrganizerSelect: state => state.report.tempOrganizerSelect,
    tempParticipantSelect: state => state.report.tempParticipantSelect,

    courseActivityName: state => state.course.course.baseInfo.activity.activityName,
    isShowCourse: state => state.course.isShowCourse,
    courseActivityPlatform: state => state.course.course.baseInfo.activity.activityPlatform,
    coursePlatformCategory: state => state.course.course.baseInfo.activity.platformCategory,
    courseActivityPlatformText: state => state.course.courseActivityPlatformText,
    coursePlatformCategoryText: state => state.course.coursePlatformCategoryText,
    courseActivityLevelText: state => state.course.courseActivityLevelText,
    courseActivityLevel:state => state.course.course.baseInfo.activity.activityLevel,
    courseAddress: state => state.course.course.baseInfo.activity.address,
    courseCourseDescription: state => state.course.course.baseInfo.activity.courseDescription,
    courseRemind:state => state.course.course.baseInfo.activity.remind,
    courseCoverPicture:state => state.course.course.baseInfo.activity.coverPicture,
    teacherId:state => state.course.course.baseInfo.activity.teacherId,
    teacherName:state => state.course.course.baseInfo.activity.teacherName,
    teacherPosition:state => state.course.course.baseInfo.activity.teacherPosition,
    tempCourseCollege:state => state.course.tempCourseCollege,
    tempCourseMajor:state => state.course.tempCourseMajor,
    tempCourseGrade:state => state.course.tempCourseGrade,
    tempCourseClbum:state => state.course.tempCourseClbum,
    tempCourseOtherCollege:state => state.course.tempCourseOtherCollege,
    tempCourseOtherMajor:state => state.course.tempCourseOtherMajor,
    tempCourseOtherGrade:state => state.course.tempCourseOtherGrade,
    tempCourseOtherClbum:state => state.course.tempCourseOtherClbum,
    tempCourseLimitCollege:state => state.course.tempCourseLimitCollege,
    tempCourseLimitMajor:state => state.course.tempCourseLimitMajor,
    tempCourseLimitGrade:state => state.course.tempCourseLimitGrade,
    tempCourseLimitClass:state => state.course.tempCourseLimitClass,
    courseCollege: state => state.course.course.objectSetting.college,
    courseMajor: state => state.course.course.objectSetting.major,
    courseGrade: state => state.course.course.objectSetting.grade,
    courseClbum: state => state.course.course.objectSetting.clbum,
    courseOtherCollege: state => state.course.course.objectSetting.object.otherCollege,
    courseOtherMajor: state => state.course.course.objectSetting.object.otherMajor,
    courseOtherGrade: state => state.course.course.objectSetting.object.otherGrade,
    courseOtherClass: state => state.course.course.objectSetting.object.otherClass,
    courseLimitCollege: state => state.course.course.objectSetting.object.limitCollege,
    courseLimitMajor: state => state.course.course.objectSetting.object.limitMajor,
    courseLimitGrade: state => state.course.course.objectSetting.object.limitGrade,
    courseLimitClass: state => state.course.course.objectSetting.object.limitClass,
    courseObject: state => state.course.course.objectSetting,
    courseBaseInfo:state => state.course.course.baseInfo,
}
export default getters
